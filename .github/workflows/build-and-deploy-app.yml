# SPDX-FileCopyrightText: Copyright 2025 Opal Health Informatics Group at the Research Institute of the McGill University Health Centre <john.kildea@mcgill.ca>
#
# SPDX-License-Identifier: Apache-2.0

# This workflow is explained in `docs/deployment/ci-cd.md`; please keep that documentation file up to date when making changes here.

name: Build and Deploy App
# Default to dev when running automatically (see also "env" below)
run-name: Building and (optionally) deploying the mobile app for ${{ inputs.ENVIRONMENT || 'dev' }} ðŸ“¦ðŸš€
on:
  # When pushing to main, automatically build for dev
  push:
    branches:
      - main
      # TODO testing
      - SB.ci-cd-app-deployment

  # Offer a manual interface to build for all other environments as needed
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Environment in which to build'
        type: choice
        required: true
        default: 'dev'
        options:
          - dev
          - prod
      DEPLOY:
        description: 'Deploy the resulting mobile app'
        required: true
        default: true
        type: boolean

env:
  # Read the target environment from workflow_dispatch inputs, or default to dev
  ENVIRONMENT: ${{ inputs.ENVIRONMENT || 'dev' }}
  # TODO testing
  FIREBASE_GROUP: "test-ci"  # The name of the group to which the app is deployed (via Firebase App Distribution)

permissions:
  contents: read

jobs:
  build-android:
    runs-on: macos-latest
    steps:
      # Setup
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: Rename build output
        id: rename-android
        run: |
          touch "opal-${ENVIRONMENT}.apk"
          echo "ARTIFACT_NAME=opal-${ENVIRONMENT}.apk" >> "$GITHUB_OUTPUT"
      - name: Archive build output
        uses: actions/upload-artifact@v4.6.2
        with:
          name: android-app
          path: ${{ steps.rename-android.outputs.ARTIFACT_NAME }}

  deploy-android:
    needs: build-android
    runs-on: ubuntu-latest
    # Deploy manually via inputs, or automatically (to dev) when building on main
    # TODO testing
    if: ${{ inputs.DEPLOY || github.ref == 'refs/heads/SB.ci-cd-app-deployment' }}
#    if: ${{ inputs.DEPLOY || github.ref == 'refs/heads/main' }}
    steps:
      # Setup
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - name: Download Android build artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: android-app
          run-id: ${{ github.run_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: ls -la
      - run: echo "./android-app/$ARTIFACT_NAME"
      - run: ls -la ./android-app

      # Deploy the app
      # Deployment via firebase-tools implicitly uses a service account assigned to $GOOGLE_APPLICATION_CREDENTIALS (from values defined in the GitHub project settings)
      # This service account provides permissions for Firebase app distribution
      # See: https://firebase.google.com/docs/admin/setup#initialize_the_sdk_in_non-google_environments
      - name: Deploy the app
        run: npx firebase-tools appdistribution:distribute ./android-app/$ARTIFACT_NAME --app $FIREBASE_APP_ANDROID --release-notes "$RELEASE_NOTES" --groups $FIREBASE_GROUP
        env:
          ARTIFACT_NAME: ${{ needs.build-android.outputs.ARTIFACT_NAME }}
          FIREBASE_APP_ANDROID: ${{ vars[format('{0}_FIREBASE_APP_ANDROID', env.ENVIRONMENT)] }}
          FIREBASE_GROUP: ${{ env.FIREBASE_GROUP }}
