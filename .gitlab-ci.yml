default:
  tags:
    - macos

workflow:
  rules:
    # Launch a build only for commits that have been tagged with the correct syntax (e.g. build-staging-ios-optionaldetails)
    # See build.sh for details
    - if: $CI_COMMIT_TAG =~ /^build-([a-zA-Z]+)-(all|android|ios)(-.*)?$/

stages:
  - build
  - deploy

# Parses the environment from the tag and assigns it to a .env file to be used in the next jobs
parse environment:
  stage: .pre
  script:
    - echo "$CI_COMMIT_TAG"
    - TAG_PARAMS=$(echo "$CI_COMMIT_TAG" | sed -r 's/-/ /g')
    - echo "$TAG_PARAMS"
    - set -- $TAG_PARAMS
    - ENV="$2"
    - echo "ENV=$ENV" >> build.env
    - cat build.env
  artifacts:
    reports:
      dotenv: build.env

build android:
  stage: build
  rules:
    # Launch only for platforms "android" or "all"
    # TODO use anchors to reduce duplication?
    - if: $CI_COMMIT_TAG =~ /^build-([a-zA-Z]+)-(all|android)(-.*)?$/
  before_script:
    - uname -a
    - npm -v
    - npm install
  script:
    - java -version
    - gradle -v
    - echo "$ENV"
    - npm run build:app:android:device --env=$ENV
    - mv "./platforms/android/app/build/outputs/apk/debug/app-debug.apk" "opal-$ENV.apk"
  artifacts:
    expire_in: 1 day
    paths:
      - opal-$ENV.apk
  # TODO check if dependency is necessary
  dependencies:
    - parse environment

build ios:
  stage: build
  rules:
    # Launch only for platforms "ios" or "all"
    - if: $CI_COMMIT_TAG =~ /^build-([a-zA-Z]+)-(all|ios)(-.*)?$/
  before_script:
    - uname -a
    - npm -v
    - npm install
  script:
    # fixes Bus Error when cordova invokes pod install
    # see: https://stackoverflow.com/a/70581304
    - gem install --user-install ffi -- --enable-libffi-alloc
    - echo "$ENV"
    - npm run build:app:ios:device --env=dev
    - mv ./platforms/ios/build/device/*.ipa "opal-$ENV.ipa"
  artifacts:
    expire_in: 1 day
    paths:
      - opal-$ENV.ipa
  dependencies:
    - parse environment

# Deployment implicitly uses a service account ($GOOGLE_APPLICATION_CREDENTIALS) defined in the GitLab project settings
# This service account provides permissions for uploading to Firebase App Distribution
# See: https://firebase.google.com/docs/app-distribution/authenticate-service-account.md?platform=android
.deploy to firebase:
  stage: deploy
  before_script:
    - npm install -g firebase-tools
    - RELEASE_NOTES="Build created and deployed by GitLab CI/CD via tag '$CI_COMMIT_TAG' on $(git log --format=short -n 1)"
    - echo "$RELEASE_NOTES"

deploy android to firebase:
  extends: .deploy to firebase
  rules:
    # Launch only for platforms "android" or "all"
    - if: $CI_COMMIT_TAG =~ /^build-([a-zA-Z]+)-(all|android)(-.*)?$/
  script:
    # Uses the app ID $FIREBASE_APP_DEV_ANDROID defined in the GitLab project settings
    - firebase appdistribution:distribute opal-$ENV.apk --app $FIREBASE_APP_DEV_ANDROID --release-notes "$RELEASE_NOTES" --groups "test-ci"

deploy ios to firebase:
  extends: .deploy to firebase
  rules:
    # Launch only for platforms "ios" or "all"
    - if: $CI_COMMIT_TAG =~ /^build-([a-zA-Z]+)-(all|ios)(-.*)?$/
  script:
    # Uses the app ID $FIREBASE_APP_DEV_IOS defined in the GitLab project settings
    - firebase appdistribution:distribute opal-$ENV.ipa --app $FIREBASE_APP_DEV_IOS --release-notes "$RELEASE_NOTES" --groups "test-ci"

# Deletes the build tag after the build is done to avoid cluttering the tag list
.cleanup:
  stage: .post
  script:
    - echo "Deleting tag; $CI_COMMIT_TAG"
    # TODO does not have the required permissions to execute successfully
    - git push --delete https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/opalmedapps/qplus.git/ $CI_COMMIT_TAG
